name: CI

on:
  push:
    branches:
      - master
  pull_request: {}

jobs:
  check_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      # Use nightly Rust to check the format
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Check format
        run: cargo fmt --all -- --check

  check-rust-sdk:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          override: true
          components: rustfmt, clippy

      - name: Check with clippy
        run: cargo clippy -p longbridge --all-features

      - name: Test
        run: cargo test -p longbridge --all-features

  check-python-sdk:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.60.0
          override: true
          components: rustfmt, clippy

      - name: Check with clippy
        run: cargo clippy -p longbridge-python --all-features

      - name: Test
        run: cargo test -p longbridge-python --all-features
